spring.application.name=api-gateway

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=INFO

## product service route configuration\
# lb meaning load balancing or we can take http since this is for internal routing not public routing
spring.cloud.gateway.routes[0].id=product-catalog
spring.cloud.gateway.routes[0].uri=lb://product-catalog
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

## order service route configuration\
# lb meaning load balancing or we can take http since this is for internal routing not public routing
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

## discovery sever route configuration\
# lb meaning load balancing or we can take http since this is for internal routing not public routing
# filter will set /eureka/web to root path /, because discovery server don't have any paths in it(controller paths)
spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

## discovery sever static Resources Route
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

# docker run -p 8181:8080 -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak:25.0.1 start-dev run this cmd and enable realm with client creations
# finally check realm settings and click on the open api configurations JSON for issues URL
#https://www.youtube.com/watch?v=mPPhcU7oWDU
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm
